줄 세우기 스페셜 저지

문제
{
N명의 학생들을 키 순서대로 줄을 세우려고 한다. 

각 학생의 키를 직접 재서 정렬하면 간단하겠지만, 마땅한 방법이 없어서 두 학생의 키를 비교하는 방법을 사용하기로 하였다. 

그나마도 모든 학생들을 다 비교해 본 것이 아니고, 일부 학생들의 키만을 비교해 보았다.

일부 학생들의 키를 비교한 결과가 주어졌을 때, 줄을 세우는 프로그램을 작성하시오.
}

입력
{
첫째 줄에 N(1 ≤ N ≤ 32,000), M(1 ≤ M ≤ 100,000)이 주어진다. M은 키를 비교한 회수이다. 다음 M개의 줄에는 키를 비교한 두 학생의 번호 A, B가 주어진다. 이는 학생 A가 학생 B의 앞에 서야 한다는 의미이다.

학생들의 번호는 1번부터 N번이다.
}

출력
{
첫째 줄에 학생들을 앞에서부터 줄을 세운 결과를 출력한다. 답이 여러 가지인 경우에는 아무거나 출력한다.
}

예제 입력 1 
{
3 2
1 3
2 3
}

예제 출력 1 
{
1 2 3
}

예제 입력 2 
{
4 2
4 2
3 1
}

예제 출력 2 
{
4 2 3 1
}

풀이 방법
{
    기존 생각 : 딕셔너리(해쉬 맵)와 그리디 알고리즘을 사용하면 문제를 해결할 수 있다.

    해결 알고리즘 : 위상 정렬

    위상정렬을 사용하면 문제를 해결 할 수 있다. 

    우선, M개의 데이터에 대해 진입차수의 개수를 카운트 하는 배열을 생성한다.(ex. 1 - > 2 count[2]+=1)

    동시에 진출에 대한 데이터도 넣어준다. out[1].append(2)

    위와 같은 동작을 M번 반복하면 진입 차수의 개수가 0인 데이터가 1개 이상 나올 것이다.

    만약 1개라면 그대로 while문을 이용해서 queue값을 pop하며 진행하면 되지만 

    2개 이상일 경우에는 문제가 발생하기 때문에 가장 앞에 존재하지 않는 데이터를 생성하여 넣어준다. (ex. 0 - > 1, 0 - > 4)

    위의 방법까지 진행하면 진입 차수가 0인 데이터는 하나만 남게 된다.

    위의 데이터를 갖고 while문을 돌면서 진입 차수가 0인 데이터를 pop하고 진출 가능한 데이터들을 queue에 넣어준다.

    위의 반복문을 queue가 빌 때까지 진행하면 순서가 나오게 된다.

    이때, M개의 데이터에 나오지 않은 값도 존재할 수 있기 때문에 visit 배열을 생성하여 M개의 데이터에 나오지 않은 것을 판단하고 

    생성한 데이터 뒤에 순차적으로 출력하면 문제를 해결할 수 있다.
}