풀이 방법
{
    이 문제는 푸는 방법이 떠오르지 않아 인터넷에 답을 보고 푼 문제이다.

    아이디어만 갖고 와서 다시 내 방식대로 코드를 작성하여 문제를 해결했다.

    아이디어는 내가 생각했던 것과 유사하지만 좀 더 무식한(확실한) 방식으로 볼 수 있다.

    나의 기존 아이디어는 현재 발판의 위치를 가기 직전의 왼발 위치와 오른발 위치가 최적이라고 가정하고 출발 했지만

    위의 방식은 dp를 가장한 greedy한 접근법이었기에 맞을 수 없었다.

    따라서, 본 문제의 아이디어는 왼발과 오른발을 차례대로 고정하고 왼발의 이전 위치를 모든 경우의수(0,1,2,3,4)를 따져서 현재 위치까지의 값에 도달하는데 드는 
    
    비용과 이전에 위치했을 때의 dp 값을 더하고 가장 작은 값을 dp 값으로 하게 하였다.

    주의할 점은 초기값을 2로 바꿔줘야 하는 것이다.(초기 실행시, 오른발이든 왼발이든 무조건 이동하기 때문에 2를 넣어주어야 한다.)

    위와 같은 방식을 취하게 되면 마지막 발판을 밟았을 떄의 모든 발 좌표에 대한 dp 값을 비교하여 답을 구할수 있다.
}

느낀점
{
    DP와 greedy는 비슷하지만 분명히 다르다.

    이 점을 늘 생각하자!
}