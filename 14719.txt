빗물

문제
{
2차원 세계에 블록이 쌓여있다. 비가 오면 블록 사이에 빗물이 고인다.

비는 충분히 많이 온다. 고이는 빗물의 총량은 얼마일까?
}

입력
{
첫 번째 줄에는 2차원 세계의 세로 길이 H과 2차원 세계의 가로 길이 W가 주어진다. (1 ≤ H, W ≤ 500)

두 번째 줄에는 블록이 쌓인 높이를 의미하는 0이상 H이하의 정수가 2차원 세계의 맨 왼쪽 위치부터 차례대로 W개 주어진다.

따라서 블록 내부의 빈 공간이 생길 수 없다. 또 2차원 세계의 바닥은 항상 막혀있다고 가정하여도 좋다.
}


출력
{
2차원 세계에서는 한 칸의 용량은 1이다. 고이는 빗물의 총량을 출력하여라.

빗물이 전혀 고이지 않을 경우 0을 출력하여라.
}

예제 입력 1 
{
4 4
3 0 1 4
}

예제 출력 1 
{
5
}

예제 입력 2 
{
4 8
3 1 2 3 4 1 1 2
}

예제 출력 2 
{
5
}

예제 입력 3 
{
3 5
0 0 0 2 0
}

예제 출력 3 
{
0
}

풀이 방법
{
    전형적인 DFS/BFS 문제인 것으로 보인다.

    물이 고이기 위해서는 좌우에 벽으로 막혀있어야 하고 물이 고인 상태에서 위 층을(y축)확인 하기 때문에 DFS를 이용하여 최초로 벽을 찾는 경우에 좌표를 넣고
    
    DFS함수를 이용하여 오른쪽으로만 이동하게 설정한다. 이후, 벽을 맞나면 이동한 만큼의 수치를 return 하도록 코드를 짰다.

}
