주사위 윷놀이

문제
{
주사위 윷놀이는 다음과 같은 게임판에서 하는 게임이다.



처음에는 시작 칸에 말 4개가 있다.

말은 게임판에 그려진 화살표의 방향대로만 이동할 수 있다. 

말이 파란색 칸에서 이동을 시작하면 파란색 화살표를 타야 하고, 이동하는 도중이거나 파란색이 아닌 칸에서 이동을 시작하면 빨간색 화살표를 타야 한다. 

말이 도착 칸으로 이동하면 주사위에 나온 수와 관계 없이 이동을 마친다.

게임은 10개의 턴으로 이루어진다. 

매 턴마다 1부터 5까지 한 면에 하나씩 적혀있는 5면체 주사위를 굴리고, 도착 칸에 있지 않은 말을 하나 골라 주사위에 나온 수만큼 이동시킨다.

말이 이동을 마치는 칸에 다른 말이 있으면 그 말은 고를 수 없다. 단, 이동을 마치는 칸이 도착 칸이면 고를 수 있다.

말이 이동을 마칠 때마다 칸에 적혀있는 수가 점수에 추가된다.

주사위에서 나올 수 10개를 미리 알고 있을 때, 얻을 수 있는 점수의 최댓값을 구해보자.
}

입력
{
첫째 줄에 주사위에서 나올 수 10개가 순서대로 주어진다.
}

출력
{
얻을 수 있는 점수의 최댓값을 출력한다.
}

예제 입력 1 
{
1 2 3 4 1 2 3 4 1 2
}

예제 출력 1 
{
190
}

예제 입력 2 
{
1 1 1 1 1 1 1 1 1 1
}

예제 출력 2 
{
133
}

예제 입력 3 
{
5 1 2 3 4 5 5 3 2 4
}

예제 출력 3 
{
214
}

예제 입력 4 
{
5 5 5 5 5 5 5 5 5 5
}

예제 출력 4 
{
130
}

풀이 방법
{
    DP를 이용해서 해결해야하는 문제이다.(DFS)

    말이 4개가 존재하기 때문에 4개의 말이 가는 곳을 모두 계산하여 가장 큰 값을 출력하면 된다.

    answer배열을 생성한 뒤, 값을 넣어주면 되는데 answer[0] = 한번 이동한 후에 얻을 수 있는 최대값으로 생각하면 된다.

    따라서, 정답은 answer[10 - 1]을 구해주면 된다.

    위의 answer 배열을 채우기 위해서는 재귀 함수를 작성하면 되는데 함수의 형태는 다음과 같다.

    move(1번 말의 위치, 2번 말의 위치, 3번 말의 위치, 4번 말의 위치, 현재 이동 횟수)

    위의 move 함수를 재귀적으로 불러주면 되는데

    예를 들어, 처음 말을 이동시키는 방법은 4가지가 있는데
}

풀이 방법2
{
    DFS를 이용해서 문제를 해결할 수 있다.

    4개의 말을 재귀문을 이용해서 계속 값을 보내주면 된다.

    for 반복문을 이용해서 4개의 말을 차례대로 넣고 진행시켜 주는데 이때, 
}