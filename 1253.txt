좋다

문제
{
N개의 수 중에서 어떤 수가 다른 수 두 개의 합으로 나타낼 수 있다면 그 수를 “좋다(GOOD)”고 한다.

N개의 수가 주어지면 그 중에서 좋은 수의 개수는 몇 개인지 출력하라.

수의 위치가 다르면 값이 같아도 다른 수이다.
}

입력
{
첫째 줄에는 수의 개수 N(1 ≤ N ≤ 2,000), 두 번째 줄에는 i번째 수를 나타내는 Ai가 N개 주어진다. (|Ai| ≤ 1,000,000,000, Ai는 정수)
}

출력
{
좋은 수의 개수를 첫 번째 줄에 출력한다.
}

예제 입력 1 
{
10
1 2 3 4 5 6 7 8 9 10
}

예제 출력 1 
{
8
}

풀이 방법1(시간 초과 및 실패)
{
    2개로 만들 수 있는 모든 수를 구하는 과정은 nC2 = N*N-1 == O(N^2)

    따라서, 만들 수 있는 모든 경우의 수를 구하고 개수를 구하면 된다.

    --> 문제를 제대로 이해하지 않은 채 코드를  작성하여 문제 발생(본인을 뺀 나머지 숫자들 중 2개를 선택한 합이 본인과 같아야 함)
}

풀이 방법2(메모리 초과)
{
    set와 이진탐색을 이용하여 문제를 해결하려고 했으나 메모리 초과가 발생했다.
}

풀이 방법3(성공)
{
    투 포인터 개념을 사용하여 문제를 해결할 수 있었다.

    이진탐색과 원리는 유사하다. 이진 탐색의 경우 left, right 두 값의 중간인 mid 하나로 left, right 값을 옮겼다면

    투 포인터는 left, right 각각의 값을 하나씩만 증가시켜주는 브루트 포스에 가까운 개념이다.
}

느낀 점
{
    투 포인터 개념을 처음 들어서 몰랐는데 유용한 방법인 것 같다.

    이 문제도 다시 풀어보쟈 :)
}