알파벳 다국어

문제
{
세로 R칸, 가로 C칸으로 된 표 모양의 보드가 있다. 보드의 각 칸에는 대문자 알파벳이 하나씩 적혀 있고, 좌측 상단 칸 (1행 1열) 에는 말이 놓여 있다.

말은 상하좌우로 인접한 네 칸 중의 한 칸으로 이동할 수 있는데, 새로 이동한 칸에 적혀 있는 알파벳은 지금까지 지나온 모든 칸에 적혀 있는 알파벳과는 달라야 한다. 

즉, 같은 알파벳이 적힌 칸을 두 번 지날 수 없다.

좌측 상단에서 시작해서, 말이 최대한 몇 칸을 지날 수 있는지를 구하는 프로그램을 작성하시오. 말이 지나는 칸은 좌측 상단의 칸도 포함된다.
}

입력
{
첫째 줄에 R과 C가 빈칸을 사이에 두고 주어진다. (1 ≤ R,C ≤ 20) 둘째 줄부터 R개의 줄에 걸쳐서 보드에 적혀 있는 C개의 대문자 알파벳들이 빈칸 없이 주어진다.
}

출력
{
    첫째 줄에 말이 지날 수 있는 최대의 칸 수를 출력한다.
}

예제 입력 1 
{
2 4
CAAB
ADCB
}

예제 출력 1 
{
3
}

예제 입력 2 
{
3 6
HFDFFB
AJHGDH
DGAGEH
}

예제 출력 2 
{
6
}

예제 입력 3 
{
5 5
IEFCJ
FHFKC
FFALF
HFGCF
HMCHH
}

예제 출력 3 
{
10
}

풀이 방법(시간 초과)
{
    DFS를 이용해서 문제를 해결할 수 있다.

    배열 생성 및 dict 사용
}

풀이 방법2(시간 초과)
{
    DFS이용 + answer 변수 생성 및 dict 사용
}

풀이 방법2(시간 초과)
{
    DFS이용 + answer 변수 생성 및 dict 사용
}

풀이 방법3(시간 초과)
{
    DFS이용 + answer 변수 생성 및 set 사용
}

풀이 방법4(시간 초과)
{
    BFS이용 + answer 변수 생성 및 set 사용 + copy사용
}

풀이 방법5(성공)
{
    BFS이용 + answer 변수 생성 및 set 사용
}

느낀 점
{
    솔직히 시간 초과가 나는 부분이 이해가 가질 않는다.

    알고리즘 상의 문제가 아니라 파이썬 자체에서 받는데 오래 걸리는 부분이 시간초과 발생 유무를 가르는 것 같다.

    하지만, 이 문제를 풀면서 set의 중요성에 대해 깨달았다.
}

