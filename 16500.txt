문자열 판별

문제
{
알파벳 소문자로 이루어진 문자열 S와 단어 목록 A가 주어졌을 때, 

S를 A에 포함된 문자열을 한 개 이상 공백없이 붙여서 만들 수 있는지 없는지 구하는 프로그램을 작성하시오.

A에 포함된 단어를 여러 번 사용할 수 있다.
}

입력
{
첫째 줄에 길이가 100이하인 문자열 S가 주어진다. 둘째 줄에는 A에 포함된 문자열의 개수 N(1 ≤ N ≤ 100)이 주어진다. 셋째 줄부터 N개의 줄에는 A에 포함된 단어가 한 줄에 하나씩 주어진다. A에 포함된 문자열은 알파벳 소문자로만 이루어져 있고, 길이는 100을 넘지 않는다.
}

출력
{
A에 포함된 문자열로 S를 만들 수 있으면 1, 없으면 0을 출력한다.
}

예제 입력 1 
{
softwarecontest
2
software
contest
}

예제 출력 1 
{
1
}

풀이 방법
{
    배열을 생성한다.

    배열은 현재 위치의 단어까지 문장을 조합했을 떄, 문장을 만들 수 있으면 1, 없으면 0을 갖는 배열이다.

    이때, 정답은 배열[주어진 문장의 길이 - 1]를 넣으면 된다.

    dp 배열을 생성해서 풀어주면 된다. 

    쉽게 생각해서 "applebanana"라는 문장이 주어졌을 떄, 앞에서 부터 반복문을 실행하여 문자열을 비교하여 dp 값을 채워준다.

    이 경우 a, ap, app, .. apple까지 가게 되는데 동일한 순간에 dp[6]의 값을 1로 바꾼다. 이후, 주어진 단어의 길이만큼 진행 되면 1로 교체한다.

    이후, 다시 반복문을 진행하는데 이때의 조건은 만들 수 있는 곳에서 출발해야 한다는 것이다. 따라서, 가장 처음 dp[0]의 값만 1로 변환해주고 진행하게 되면

    만드는 것이 가능한 경우에만 주어진 단어를 갖고 진행하여 최종 문자열을 제작할 수 있는가를 판단할 수 있다.

    :) DP 오예
}

'a' == 'a'