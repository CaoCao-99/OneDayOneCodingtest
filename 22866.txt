탑 보기

문제
{
일직선으로 다양한 높이의 건물이 총 N개가 존재한다. 각 건물 옥상에서 양 옆에 존재하는 건물의 옆을 몇 개 볼 수 있는지 궁금해졌다.

i번째 건물 기준으로 i - 1, i - 2, ..., 1번째 건물은 왼쪽에, i + 1, i + 2, ..., N번째 건물은 오른쪽에 있다. 각 건물 사이의 거리는 다 동일하다.

현재 있는 건물의 높이가 L이라고 가정하면 높이가 L보다 큰 곳의 건물만 볼 수 있다.

바라보는 방향으로 높이가 L인 건물 뒤에 높이가 L이하인 건물이 있다면 가려져서 보이지 않는다.

번호	1	2	3	4	5	6	7	8
높이	3	7	1	6	3	5	1	7

보이는 건물 번호	2	x	2, 4, 8	2, 8	2,4,6,8	2,4,8	2,4,6,8	x

각 건물에서 볼 수 있는 건물들이 어떤것이 있는지 구해보자.
}

입력
{
첫번째 줄에 건물의 개수 
N이 주어진다.

두번째 줄에는 
N개의 건물 높이가 공백으로 구분되어 주어진다.
}


출력
{
i(1 <= i <= N)번째 건물에서 볼 수 있는 건물의 개수를 출력한다.

만약 볼 수 있는 건물의 개수가 1개 이상이라면 
i번째 건물에서 거리가 가장 가까운 건물의 번호 중 작은 번호로 출력한다.
}

제한
 
1 <= N <= 100,000 
 
1 <= L <= 100,000 
예제 입력 1 
8
3 7 1 6 3 5 1 7
예제 출력 1 
1 2
0
3 2
2 2
4 4
3 4
4 6
0

풀이 방법
{
    스택을 이용하면 문제를 해결할 수 있다.

    기본적인 발상은 다음과 같다.

    1. 현재 건물에서 좌측으로 보여지는 건물의 개수

    2. 현재 건물에서 우측으로 보여지는 건물의 개수

    3. 현재 건물에서 보이는 가장 가까운 건물

    처음에는 스택을 이용해서 풀어도 시간초과가 날 것이라고 생각했는데 스택을 건물이 바뀔떄마다 아예 새로 만드는 것이 아니라 이전에 쓰던 스택을 계속 이용해서 쓰면 시간초과가 발생하지 않고

    한번에 답을 구할 수 있다.(n번)

    1번에 해당하는 답

    먼저, 현재 스택의 top과 비교하여 스택의 top이 현재 건물의 높이 보다 크다면 스택에 [현재 건물의 높이, 현재 건물의 번호]를 넣어주고 현재 스택의 사이즈를 구한다.

    만약, 스택의 top이 현재 건물의 높이 보다 작다면 계속해서 스택을 pop 하면서 top을 최적화 시켜주면 된다.

    만약, 스택의 top이 현재 건물의 높이와 같다면 스택의 top의 1번 인덱스인 건물 번호를 바꿔준다.

    위의 스택의 top이 현재 건물의 높이 보다 작거나 같은 경우는 하나로 묶어서 생각해도 된다.

    각 건물별로 스택의 사이즈 - 1이 현재 건물에서 좌측으로 보이는 건물의 개수와 같다. 1을 빼주는 이유는 본인 값도 들어가 있기 때문이다.

    2번에 해당하는 답도 동일하게 풀 수 있다.

    3번에 해당하는 답을 내기 위해서는 위의 1번과 2번 답을 구하는 과정에서 스택의 탑을 제외하고 가장 근처에 있는 값의 1번째 인덱스와 현재 건물의 위치의 차이를 계산해서 작은 값을 넣는다.

    만약 두 값이 같다면 더 작은 값을 출력하면 된다.
}

느낀 점
{
    발상 자체도 어려웠는데 구현하는 것이 더 헷갈렸던 문제다.

    다음에 다시 풀어보쟈 :)
}