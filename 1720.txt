타일 코드 다국어

문제
{
2×N 크기의 넓은 판을 1×2 (또는 2×1) 크기와 2×2 크기의 타일로 채우려고 한다. 

여러 가지 경우가 있을 수 있으므로, 각각을 하나의 코드로 대응시켜서 암호화에 이용하려고 한다.

그런데 문제가 생겼다. 

넓은 판을 교환하다 보니 좌우 대칭인 경우가 있어, 뒤집히는 경우 코드가 헷갈리게 되는 경우가 발생한 것이다. 

예를 들어 아래의 두 경우는 달라 보이지만 좌우 대칭을 이루고 있다.

N이 주어지면, 전체 타일 코드의 개수를 구하는 프로그램을 작성하시오. 

(단, 서로 좌우 대칭을 이루는 중복된 표현은 한 가지 경우로만 처리한다.)
}

입력
{
첫째 줄에 타일의 크기 N(1 ≤ N ≤ 30)이 주어진다.
}

출력
{
첫째 줄에 타일 코드의 개수를 출력한다.
}

예제 입력 1 
{
4
}

예제 출력 1 
{
8
}

풀이 방법1(실패)
{
    DFS를 활용하여 문제를 해결하고자 했다.

    각 타일에게 번호를 부여하여 (0 : 1x2, 1 : 2x1, 2 : 2x2) 각각의 현재 위치와 들어간 타일의 종류를 넣고

    0,1,2 순서대로 넣을 수만 있으면 순서대로 넣도록 코드를 짜고 재귀문을 돌려줬다.

    위의 코드대로 하면 n에 대한 타일의 개수는 정상적으로 나오는데 재귀문과 DFS를 사용했기 때문에 너무 오랜 시간이 걸린다.

    따라서, 확실한 규칙이 있기 때문에 DP를 활용하여 문제를 해결했다.
}

풀이 방법2(성공)
{
    DP배열을 이용하여 문제를 해결할 수 있다.

    타일을 좌우 반전 시켰을 때 겹치지 않는 타일의 경우는 2가지이다.

    1. 애초에 팰린드롬인 타일
    2. 아닌 타일 / 2

    1번의 경우는 또 2가지로 나누어서 생각할 수 있는데 홀수 / 짝수 이다.

    먼저, n의 값이 짝수인 경우에는 dp[n//2]에 해당하는 값과 dp[n//2 - 1] * 2에 해당하는 값이다.

    첫 번째는 정확히 가운데를 기점으로 반반 나눈 것이고 두번째는 가운데에 길이가 2인 타일이 들어온 경우이다.

    홀수인 경우에는 dp[n//2 - 1]로 경우의 수를 구할 수 있다.

    아닌 타일의 경우는 dp[n]에서 위에 구한 값을 빼고 2로 나누면 된다.

    결과적으로, dp에 대한 배열을 만들면 문제를 해결할 수 있다.

    dp 점화식은 dp[i] = dp[i-1] + dp[i-2] * 2와 같다.
}